@model WMart.Models.GuestResponse

@{
    Layout = null;
}

<!DOCTYPE html>
<!-- NEW FILE -->
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RsvpForm</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.7.1.min.js"></script> 
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

   

    
   
   

</head>
<body style="background-color:#aacddc; overflow-x:hidden">

    @using (Html.BeginForm("RsvpForm", "Home", FormMethod.Post, null))
    {
        if (ViewData.ModelState.IsValid)
        {
            if (@ViewBag.Name != null)
            {
                <b>
                    Name : @ViewBag.Name<br />
                    CEmail : @ViewBag.CEmail
                </b>
            }
        }


        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
   
        <div>
            
            <div class="container">
                <div class="page-header">
                    <h1>  <img src="~/Images/Wmart.png" width="70" height="60" ; /><span style="margin-top:3em"> WMart</span></h1>

                </div>
                <div>
                    <h2>Employee Data</h2>
                    <p>
                        Basic Details of all Employees working in WMart IT Deparment
                    </p>


                </div>



            </div>
           
            <form data-toggle="validator" role="form" id="visitForm">
                <div class="jumbotron">
                    <div class="row">

                        <div class="form-group">

                            <div class="col-md-4 col-md-offset-1 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter Name", Id = "Name",  required = "required" })
                                   </div>
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })


                            </div>

                        </div>

                    </div><!-- /.row -->
                    <br />

                    <div class="row">
                        <div class="form-group">

                            <div class="col-md-4 col-md-offset-1 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                    @Html.TextBoxFor(x => x.CEmail, new { @class = "form-control", placeholder = "Enter Your Email", Id = "Email", required = "required", type = "email" })
                                   
                                </div>
                                @Html.ValidationMessageFor(model => model.CEmail, "", new { @class = "text-danger" })
                            </div>

                        </div>



                    </div><!-- /.row -->
                    <br />
                    <div class="row">
                        <div class="form-group">

                            <div class="col-md-4 col-md-offset-1 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-earphone"></i></span>
                                    @Html.TextBoxFor(x => x.CPhone, new { @class = "form-control", placeholder = "Enter Your Mobile number", Id = "Phone", required = "required"})
                                   
                                </div>
                                @Html.ValidationMessageFor(model => model.CPhone, "", new { @class = "text-danger" })
                            </div>

                        </div>


                    </div><!-- /.row -->
                    <br />
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-4 col-md-offset-1 inputGroupContainer">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                                    @Html.DropDownListFor(m => m.Status, new List<SelectListItem> { new SelectListItem { Text = "Yes I will Attend", Value = "Yes" }, new SelectListItem { Text = "No I will not be there", Value = "No" } }, new { @class = "form-control", Id = "dropdown" })
                                </div>
                            </div>
                        </div>-

                    </div><!- /.row -->
                    <br /><div class="row">
                        <div class="col-md-4 col-md-offset-1">

                            <input type="submit" value="Submit" class="btn btn-block btn-success" />
                        </div>
                    </div>

                </div>
                </form>
            
</div>



    }


</body>

</html>
